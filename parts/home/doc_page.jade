template(name='doc_page')
    with current_doc
        .ui.stackable.padded.grid 
            .row
                .sixteen.wide.column 
                    a.ui.circular.icon.large.button(href="/")
                        i.left.chevron.icon
                    if title 
                        .ui.grey.inline.header(title=ups) !{title}
                    else if watson.metadata.title 
                        .ui.grey.inline.header(title=ups) !{watson.metadata.title}
            .row
                .four.wide.column 
                    //- if has_thumbnail
                    .ui.fluid.image.rounded
                        img(src=thumbnail)
                    .content        
                        if is_image
                            img.ui.image(src=url)
                    .meta
                        a.ui.circular.button(href=url target='_window')
                            i.external.icon
                            |view link
                        //- span.ui.grey.text #{domain}
                        if is_video
                            i.video.large.icon
                        if permalink
                            a.ui.small.compact.basic.circular.button(href="http://www.reddit.com/#{permalink}" target='_window')
                                i.comments.spaced.icon
                                |#{comment_count}
                        if domain
                            .ui.basic.circular.inverted.label(title='domain')
                                i.globe.icon
                                |#{domain}
                        if ups
                            .ui.basic.inverted.label 
                                i.thumbs.up.outline.icon
                                |#{ups}
                                //-     i.thumbs.down.outline.icon
                                //-     |#{downs}
                        if author
                            a.ui.basic.compact.inverted.button(href="https://www.reddit.com/user/#{author}" target='_window')
                                i.pencil.icon
                                |#{author}
                            //- .ui.basic.inverted.label 
                        if subreddit
                            a.ui.small.compact.basic.circular.button(href="http://www.reddit.com/r/#{subreddit}" target='_window' title="visit #{subreddit} subreddit")
                                i.reddit.icon
                                |#{subreddit}
                        i.refresh.circular.link.icon.calc_post
                        div
                        +voting_full
                    .ui.circular.button.call_watson 
                        i.chess.icon
                        |tag url
                    .ui.circular.button.call_watson_image
                        i.chess.icon
                        |tag image
                    .ui.circular.button.pull_tone
                        i.download.icon
                        |download content
                    .ui.circular.button.print_me
                        |print me
                    +array_view key='categories' icon='cubes' 
                    +array_view key='Person' icon='user' 
                    +array_view key='Company' icon='briefcase' 
                    +array_view key='TelevisionShow' icon='television' 
                    +array_view key='GeographicFeature' icon='mountain' 
                    +array_view key='Sport' icon='baseball ball' 
                    +array_view key='Broadcaster' icon='video' 
                    +array_view key='Facility' icon='building' 
                    +array_view key='HealthCondition' icon='heartbeat' 
                    +array_view key='Organization' icon='users' 
                    +array_view key='Award' icon='trophy' 
                    +array_view key='Location' icon='marker'
                    +array_view key='PrintMedia' icon='newspaper'
                    +array_view key='watson_concepts' icon='cubes'
                    +array_view key='watson_keywords' icon='tags'
                        
                .eight.wide.column 
                    if is_youtube
                        .ui.embed.youtube_view(data-source="youtube" data-id=youtube_id)
                        //- iframe(width="560" height="315" src=url frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                    if is_streamable
                        div.invert(style="width: 100%; height: 0px; position: relative; padding-bottom: 56.250%;")
                            iframe(src=url frameborder="0" width="100%" height="100%" allowfullscreen style="width: 100%; height: 100%; position: absolute;")
                    img.invert(src=url)
                    div
                    +session_edit_value_button key='view_tone' value=true label='tone'
                    +session_edit_value_button key='view_tone' value=false label='plain'
                    if tone 
                        .ui.styled.accordion
                            .active.title 
                                .ui.header content
                                    i.dropdown.icon
                            .active.content
                                .scrolling
                                    each tone.result.sentences_tone
                                        .item
                                            if view_tone
                                                //- span #{sentence_id}
                                                span(class="{{calc_size top_score}} #{tone_sentence_class}" title="{{ top_score }}% significant") #{text}
                                                //- .ui.basic.small.compact.button
                                                //- .ui.small.basic.label #{tone_id}
                                                .ui.small.basic.inverted.label {{to_percent score}} #{tone_id}
                                                //- .ui.small.basic.inverted.label {{to_percent score}}% #{tone_id}
                                            else 
                                                span.large120(title="#{sentence_id}") #{text}
                                                //- span.large-text #{text}
                    if tags
                        .ui.styled.accordion
                            .title
                                .ui.header #{tags.length} tags
                                    i.dropdown.icon
                            .content
                                each tags
                                    .ui.circular.large.inverted.black.label
                                        |#{this}
                    div
                    //- if body
                    //-     .ui.basic.segment
                    //-         |!{body}
                    if watson 
                        .ui.styled.accordion
                            .title 
                                .ui.header emotional analysis
                                    i.dropdown.icon
                            .content 
                                .scrolling
                                    +watson_view
                .four.wide.column
                    +comments


template(name='emotion_circle')
    .ui.circular.label(class=emotion_circle_class title=emotion)
        span {{ to_percent percent }}
            //- if label 
            //-     |#{label}
            //- else 
            //-     |#{emotion}
        

template(name='doc_card')
    .ui.card
        if is_youtube
            .ui.embed.youtube_view(data-source="youtube" data-id=youtube_id)

        else if has_thumbnail
            a.image.invert.rounded.toggle_more
                img(src=thumbnail)
        .content        
            .header
                if title 
                    .ui.grey.small.header.pointer.goto_article(title="#{ups} upvotes") !{title}
                else if watson.metadata.title
                    .ui.grey.small.header.goto_article(title="#{ups} upvotes") !{watson.metadata.title}
                if is_video 
                    i.video.grey.icon
            .meta
                if view_more
                    i.chevron.down.grey.link.circular.large.icon.toggle_more
                else     
                    i.chevron.right.grey.link.circular.large.icon.toggle_more
                //- .meta
                //- if dev
                //-     .ui.small.inline.grey.header 
                //-         i.tags.small.icon
                //-         |#{tags.length}

                a.ui.compact.circular.icon.basic.grey.button(href=url target='_window' title="goto #{url}")
                    i.external.icon
                span.ui.grey.text #{domain}
                if is_video
                    i.video.large.icon
                a.ui.small.compact.basic.circular.button(href="http://www.reddit.com/#{permalink}" target='_window')
                    i.comments.spaced.icon
                    |#{comment_count}
                .ui.basic.inverted.label 
                    i.thumbs.up.outline.icon
                    |#{ups}
                //- i.thumbs.down.outline.icon
                //-     |#{downs}
            if view_more
                //- if is_image
                img.ui.image.collapse(src=url)
                //- if view_more
                a.ui.basic.compact.inverted.button(href="https://www.reddit.com/user/#{author}" target='_window')
                    i.pencil.icon
                    |#{author}
                //- .ui.basic.inverted.label 
                a.ui.small.compact.basic.circular.button(href="http://www.reddit.com/r/#{subreddit}" target='_window' title="visit #{subreddit} subreddit")
                    i.reddit.icon
                    |#{subreddit}

                //- if tone 
                //-     .ui.list
                //-         each tone.result.sentences_tone
                //-             .item
                //-                 //- span #{sentence_id}
                //-                 span.large120.pointer.collapse #{text}                
                //- else    
                .ui.circular.compact.large.icon.button.pull_tone
                    i.download.icon
                .ui.circular.compact.button.call_watson 
                    i.chess.icon
                    |tag url
                .ui.circular.compact.button.call_watson_image
                    i.chess.icon
                    |tag comments
                if dev
                    .ui.circular.compact.button.print_me
                        |log
                i.refresh.circular.link.icon.calc_post
                
                //- each tags
                //-     .ui.circular.basic.compact.button.toggle_tag(class=post_tag_class)
                //-         |#{this}
            //- else 
            //-     if tone 
            //-         each two_tone
            //-             .item
            //-                 span.ui.grey.text.pointer.large120.expand #{text}
            //-                 //- each tones
            //-                 //-     .ui.basic.large.label(class="{{calculated_size 'score'}}") &nbsp; #{tone_id} {{ to_percent score }}% 
                
            //- div
            //- if body
            //-     .ui.basic.segment
            //-         |!{body}
        
template(name='doc_item')
    .ui.item
        if has_thumbnail
            a.image.invert.rounded.toggle_more
                img(src=thumbnail)
        .content        
            .header
                if title 
                    .ui.header.pointer.goto_article(title="view full") !{title}
                else if watson.metadata.title
                    .ui.header.pointer.goto_article(title="view full") !{watson.metadata.title}
                if is_video 
                    i.video.grey.icon
            .meta
                if view_more
                    i.chevron.down.grey.link.circular.large.icon.toggle_more
                else     
                    i.chevron.right.grey.link.circular.large.icon.toggle_more
                //- .meta
                //- if dev
                //-     .ui.small.inline.grey.header 
                //-         i.tags.small.icon
                //-         |#{tags.length}

                a.ui.compact.circular.icon.basic.grey.button(href=url target='_window' title="goto #{url}")
                    i.external.icon
                span.ui.grey.text #{domain}
                if is_video
                    i.video.large.icon
                a.ui.small.compact.basic.circular.button(href="http://www.reddit.com/#{permalink}" target='_window')
                    i.comments.spaced.icon
                    |#{comment_count}
                span.ui.grey.text(title='reddit upvotes')
                    i.thumbs.up.outline.icon
                    |#{ups}
                //- i.thumbs.down.outline.icon
                //-     |#{downs}
            if view_more
                //- if is_image
                img.ui.image.collapse(src=url)
                //- if view_more
                a.ui.basic.compact.inverted.button(href="https://www.reddit.com/user/#{author}" target='_window')
                    i.pencil.icon
                    |#{author}
                //- .ui.basic.inverted.label 
                a.ui.small.compact.basic.circular.button(href="http://www.reddit.com/r/#{subreddit}" target='_window' title="visit #{subreddit} subreddit")
                    i.reddit.icon
                    |#{subreddit}

                if tone 
                    .ui.list
                        each tone.result.sentences_tone
                            .item
                                //- span #{sentence_id}
                                span.large120.pointer.collapse #{text}                
                //- else    
                .ui.circular.compact.large.icon.button.pull_tone
                    i.download.icon
                .ui.circular.compact.button.call_watson 
                    i.chess.icon
                    |tag url
                .ui.circular.compact.button.call_watson_image
                    i.chess.icon
                    |tag comments
                if dev
                    .ui.circular.compact.button.print_me
                        |log
                i.refresh.circular.link.icon.calc_post
                
                each tags
                    .ui.circular.basic.compact.button.toggle_tag(class=post_tag_class)
                        |#{this}
            else 
                if tone 
                    each two_tone
                        .item
                            span.ui.grey.text.pointer.large120.expand #{text}
                            //- each tones
                            //-     .ui.basic.large.label(class="{{calculated_size 'score'}}") &nbsp; #{tone_id} {{ to_percent score }}% 
                
            //- div
            //- if body
            //-     .ui.basic.segment
            //-         |!{body}
        

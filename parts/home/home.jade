template(name='home')
    .ui.stackable.grid.padded.home
        .centered.row 
            .four.wide.column
                //- .ui.header 
                //-     i.fire.icon
                //-     |whats cookin
                //- .ui.header #{connection.status}
                unless connected
                    .ui.inline.header disconnected
                    .ui.green.basic.circular.button.reconnect reconnect
                if selected_tags_plural
                    .ui.icon.circular.black.compact.button.clear_selected_tags
                        i.remove.icon
                each selected_tags
                    button.ui.black.compact.circular.button.unselect_tag(tabindex='0')
                        //- i.remove.icon
                        | #{this}
                each tags
                    button.ui.basic.circular.compact.button.result(tabindex="0" class=result_class title=count) #{title}
                        //- small #{count}
                .spacer
                .ui.left.icon.search.input
                    i.search.icon
                    input#search_user.prompt(type='text' autofocus='' autocomplete="off" placeholder='usernames')
                if selected_users_plural
                    .ui.icon.circular.black.compact.button.clear_selected_users
                        i.remove.icon
                each selected_users
                    button.ui.black.compact.circular.button.unselect_user(tabindex='0')
                        //- i.remove.icon
                        | #{this}
                each users
                    button.ui.basic.circular.compact.button.result(tabindex="0" class=result_class title=count) #{username}
                .spacer
                .ui.left.icon.search.input
                    i.search.icon.refresh_tags
                    input#search_ingredient.prompt(type='text' autofocus='' autocomplete="off" placeholder='ingredients')
                if selected_ingredient_plural
                    .ui.icon.circular.black.compact.button.clear_selected_ingredients
                        i.remove.icon
                each selected_ingredients
                    button.ui.blue.compact.circular.button.unselect_ingredient(tabindex='0')
                        //- i.remove.icon
                        | #{this}
                each ingredients
                    button.ui.basic.circular.compact.button.ingredient_result(tabindex="0" class=result_class title=count) #{title}
                        //- small #{count}
                .spacer
                .ui.circular.basic.button.toggle_delivery
                    +icolor name='deliver-food' classes='ui inline mini image' 
                    |delivery
                .ui.circular.basic.button.toggle_pickup
                    +icolor name='doormat' classes='ui inline mini image'
                    |pickup
                if selected_food_preferences
                    .ui.icon.circular.black.compact.button.clear_selected_food_preferences
                        i.remove.icon
                each selected_food_preferences
                    button.ui.black.compact.circular.button.unselect_food_preference(tabindex='0')
                        | #{this}
                each food_preferences
                    button.ui.basic.circular.compact.button.food_preference_result(tabindex="0" class=result_class title=count) #{title}
                        //- small #{count}
                div
                .ui.small.inline.header meal
                .ui.circular.basic.compact.small.button
                    +icolor name='breakfast' classes='ui mini inline image'
                    |breakfast
                .ui.circular.basic.compact.small.button
                    +icolor name='lunch' classes='ui mini inline image'
                    |lunch
                .ui.circular.basic.compact.small.button
                    +icolor name='dinner' classes='ui mini inline image'
                    |dinner
                div
                .ui.small.inline.header available
                .ui.circular.basic.compact.small.button
                    +icolor name='present' classes='ui mini inline image'
                    |now
                .ui.circular.basic.compact.small.button
                    +icolor name='today' classes='ui mini inline image'
                    |today
                .ui.circular.basic.compact.small.button
                    +icolor name='date-to' classes='ui mini inline image'
                    |tomorrow
            .twelve.wide.column
                .sorting_row
                    .ui.icon.input
                        i.search.icon
                        input.ingredient_search(type='text' placeholder='search...')
                
                    |sort by
                    .ui.compact.small.menu
                        .ui.simple.dropdown.item
                            strong #{current_meal_sort_label}
                            i.dropdown.icon
                            .menu
                                +set_meal_sort_key key='price_per_serving' label='$/serving' icon='money'
                                +set_meal_sort_key key='datetime_available' label='available' icon='clock'
                                //- +set_meal_sort_key key='_timestamp' label='added' icon='clock'
                                +set_meal_sort_key key='comment_count' label='comment count' icon='chat'
                    .ui.compact.icon.basic.circular.button.set_sort_direction(title='toggle sort direction')
                        if sorting_up
                            i.sort.amount.down.icon
                        else
                            i.sort.amount.up.icon
                    |&nbsp;
                    |&nbsp;
                    .ui.inline.small.grey.header
                        |show
                    .ui.compact.menu
                        .ui.simple.dropdown.item
                            strong #{meal_limit}
                            i.dropdown.icon
                            .menu
                                +set_meal_limit amount=1
                                +set_meal_limit amount=5
                                +set_meal_limit amount=10
                                +set_meal_limit amount=20
                .spacer 
                .ui.stackable.four.cards
                    each meals
                        +meal_card
        //- .ui.modal 
        //-     i.close.icon
        //-     with quickbuying_meal
        //-         .ui.header buy '#{meal_dish.title}' serving
        //-         .image.content
        //-             .image
        //-                 img.ui.fluid.rounded.image(src="{{c.url meal_dish.image_id width=400 height=600 crop='fit'}}")
        //-         .content
        //-             .ui.header servings available #{servings_available}
        //-             .ui.header $#{price_per_serving}/serving
        //-             .ui.header total cost #{total_cost}
        //-             .ui.header available credit #{currentUser.credit}
        //-             .ui.header credit needed #{credit_needed}
        //-         .actions
        //-             .ui.green.button.confirm
        //-                 i.checkmark.icon
        //-                 |confirm
        //-             .ui.red.button.cancel.cancel_quickbuying
        //-                 i.remove.icon
        //-                 |cancel

                        
template(name='session_edit_value_button')
    .ui.button.set_session_value(class=calculated_class)
        if icon_view 
            i.icon(class=icon)
        else 
            if label
                |#{label}
            else 
                |#{value}


template(name='set_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        
template(name='set_meal_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        

template(name='set_view_mode_meals')
    .item.set_view
        i.icon(class=icon)
        |#{title}


template(name='set_meal_limit')
    .item.set_limit #{amount}

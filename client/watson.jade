template(name='doc_sentiment') 
    .ui.header 
        |sentiment
    .ui.tiny.disabled.progress(data-percent=sentiment_score_percent class=sentiment_bar_class)
        .bar
        .progress
    .label
        |{{ to_percent doc_sentiment_score }}%
        if is_positive
            | positive
        else
            | negative
    |#{doc_sentiment_label}
    |#{sentiment_score_percent}


template(name='small_sentiment') 
    .ui.tiny.disabled.progress(data-percent=sentiment_score_percent class=sentiment_bar_class)
        .bar
        .progress
//- 
template(name='doc_emotion') 
    // .ui.dividing.header 
    //     | emotion
    with emotion
        div
        span {{ to_percent joy }}% joy
        .rounded.inverted(style="height:5px;width:{{to_percent joy}}%;background-color:red" title="{{to_percent joy}}% green")
        span {{ to_percent sadness}}% sadness
        .rounded.inverted(style="height:5px;width:{{to_percent sadness}}%;background-color:green" title="{{to_percent sadness}}% sad")
        span {{ to_percent fear }}% fear
        .rounded.inverted(style="height:5px;width:{{to_percent fear}}%;background-color:grey" title="{{to_percent fear}}% green")
        span {{ to_percent disgust }}% disgust
        .rounded.inverted(style="height:5px;width:{{to_percent disgust}}%;background-color:teal" title="{{to_percent disgust}}% green")
        span {{ to_percent anger }}% anger
        .rounded.inverted(style="height:5px;width:{{to_percent anger}}%;background-color:green" title="{{to_percent anger}}% green")
    
//- 
//- 
//- 
template(name='call_watson')
    .ui.circular.button.autotag
        i.chess.icon
        |autotag
//- 

template(name='call_visual')
    #call_visual.ui.large.icon.button(title='analyze')
        i.chess.knight.icon


template(name='keywords')
    .ui.small.grey.header 
        |#{watson.keywords.length} keywords
    .ui.five.column.stackable.grid
        each watson.keywords
            .ui.column
                span.large120(class="{{calculated_size 'relevance'}}" title="{{ to_percent relevance }}% relevant") #{text}
                .spacer
                .meta
                    .ui.list 
                        .item {{ to_percent relevance }}% relevant
                        .item sentiment:  {{ sentiment.label }} {{ to_percent sentiment.score }}%:
                        .item #{count} count
                .description
                    if emotion
                        with emotion
                            span {{ to_percent sadness }}% sad
                                .rounded.inverted(style="height:5px;width:{{to_percent sadness}}%;background-color:blue" title="{{to_percent sadness}}% sad")
                            span {{ to_percent joy }}% joy
                                .rounded.inverted(style="height:5px;width:{{to_percent joy}}%;background-color:green" title="{{to_percent joy}}% sadness")
                            span {{ to_percent disgust }}% disgust
                                .rounded.inverted(style="height:5px;width:{{to_percent disgust}}%;background-color:orange" title="{{to_percent disgust}}% disgust")
                            span {{ to_percent fear }}% fear
                                .rounded.inverted(style="height:5px;width:{{to_percent fear}}%;background-color:black" title="{{to_percent fear}}% fear")
                            span {{ to_percent anger }}% anger
                                .rounded.inverted(style="height:5px;width:{{to_percent anger}}%;background-color:red" title="{{to_percent anger}}% anger")




template(name='entities')
    .ui.grey.header 
        |#{watson.entities.length} entities
    .ui.five.column.stackable.grid
        each watson.entities
            .ui.column
                .ui.small.grey.header #{type}
                span.large120(class="{{calculated_size 'relevance'}}" title="{{ to_percent relevance }}% relevant") #{text}
                .spacer
                .ui.list 
                    .item {{ to_percent relevance }}% relevant
                    .item sentiment:  {{ sentiment.label }} {{ to_percent sentiment.score }}%:
                    .item #{count} count
                    .item {{ to_percent confidence}}% confident
                .meta 
                    with disambiguation
                        .ui.small.header subtypes
                        .ui.bulleted.list
                            each subtype
                                .item #{this}
                        a.ui.tiny.grey.header(href=dbpedia_resource target='_window') name
                            |#{name}
                if emotion
                    with emotion
                        span {{ to_percent sadness }}% sad
                            .rounded.inverted(style="height:5px;width:{{to_percent sadness}}%;background-color:blue" title="{{to_percent sadness}}% sad")
                        span {{ to_percent joy }}% joy
                            .rounded.inverted(style="height:5px;width:{{to_percent joy}}%;background-color:green" title="{{to_percent joy}}% sadness")
                        span {{ to_percent disgust }}% disgust
                            .rounded.inverted(style="height:5px;width:{{to_percent disgust}}%;background-color:orange" title="{{to_percent disgust}}% disgust")
                        span {{ to_percent fear }}% fear
                            .rounded.inverted(style="height:5px;width:{{to_percent fear}}%;background-color:black" title="{{to_percent fear}}% fear")
                        span {{ to_percent anger }}% anger
                            .rounded.inverted(style="height:5px;width:{{to_percent anger}}%;background-color:red" title="{{to_percent anger}}% anger")



template(name='keyword_list')
    .ui.small.grey.header 
        |#{watson_keywords.length} keywords
    each watson_keywords
        .ui.large.basic.label #{this}
        span(class="{{calculated_size 'relevance'}}") #{this}



template(name='concept_list')
    .ui.small.grey.header 
        |#{watson_concepts.length} concepts
    each watson_concepts
        .ui.large.basic.label #{this}



template(name='concepts')
    .ui.small.grey.header 
        |#{watson.concepts.length} concepts
    .large150
        each watson.concepts
            div(class="{{calculated_size 'relevance'}}" title="{{to_percent relevance}}% relevant")
                a(href=dbpedia_resource target='_blank') #{text}


template(name='visual_classes')
    //- .ui.small.grey.header 
    //-     |#{visual_classes.length} visual classes
    .ui.list
        each visual_classes
            .item
                div(class="{{calculated_size 'score'}}" title="{{to_percent score}}%") #{class}
                // small {{to_percent score}}%
                small #{type_hierarchy}



template(name='categories')
    .ui.small.grey.header 
        |#{watson.categories.length} categories
    .ui.list
        each watson.categories
            .item
                strong #{label}
                |{{ to_percent score }}%


template(name='semantic_roles')
    .ui.accordion
        .title
            .ui.header #{watson.semantic_roles.length} semantic roles
                i.dropdown.icon
        .content
            +jsonView(json=watson.semantic_roles)
            //- .ui.list
            //-     each watson.semantic_roles
            //-         .item
            //-             strong #{label}
            //-             |{{ to_percent score }}%


template(name='relations')
    .title
        .ui.inline.header #{watson.relations.length} relations
        i.dropdown.icon
    .content    
        +jsonView(json=watson.relations)
        //- .ui.list
        //-     each watson.relations
        //-         .item
        //-             strong #{label}
        //-             |{{ to_percent score }}%



template(name='personality')
    if personality
        h3
            | #{customer.first_name} personality 
        each personality.personality
            h4.ui.small.grey.header
                |#{name} {{ to_percent percentile }}%
                .ui.list
                    //- .item raw score {{ to_percent raw_score }}%
                    //- .item significant #{significant}
            .ui.list
                each children
                    .item #{name} {{ to_percent percentile }}%
                    .ui.list
                        //- .item raw score {{ to_percent raw_score }}%
                        //- .item significant #{significant}
        .ui.small.grey.header needs
        .ui.list
            each personality.needs
                .item #{name} {{ to_percent percentile }}%
                .ui.list
                    //- .item raw score {{ to_percent raw_score }}%
                    //- .item significant #{significant}
        .ui.small.grey.header values
        .ui.list
            each personality.values
                .item #{name} {{ to_percent percentile }}%
                //- .ui.list
                //-     .item raw score {{ to_percent raw_score }}%
                //-     .item significant #{significant}
        if personality.behavior
            .title 
                | behavior
                i.dropdown.icon
            .content
                .ui.list
                    each personality.behavior
                        .item #{name} {{ to_percent percentage }}%
    else
        // p Not enough words to analyze author personality
    #call_personality.ui.icon.button(title='analyze personality')
        i.refresh.icon


template(name='consumption_preferences')
    if personality
        h3.ui.small.grey.header
            |#{customer.first_name} preferences
        each personality.consumption_preferences
            h3.ui.small.grey.header #{name}
            .ui.list
                each consumption_preferences
                    if score
                        .item #{name}
                    else
                        .disabled.item #{name}
            // +jsonView(json=personality.consumption_preferences)

//- 
//- 
template(name='tone')
    //- h3 Tone
    //- .ui.horizontal.list
    //-     each tone.result.document_tone.tones
    //-         .item #{tone_id} {{ to_percent score }}%
    .ui.list
        each tone.result.sentences_tone
            .item
                //- span #{sentence_id}
                span.large120(title="#{sentence_id}") #{text}
                //- each tones
                //-     .ui.basic.inverted.circular.label(class="{{calculated_size 'score'}}") &nbsp; #{tone_id} {{ to_percent score }}% 
    // unless tone                
    //- #call_tone.ui.icon.button
    //-     i.refresh.icon
            // +jsonView(json=tone)

//- 
//- 
template(name='watson_view')
    //- +tone
    +doc_sentiment
    +doc_emotion
    .ui.stackable.grid 
        .two.column.row 
            .column
                +concepts
            .column
                +categories
    +entities
    //- +semantic_roles
    //- +keyword_list
    +keywords
    +concept_list
    //- .ui.hidden.divider
    //- +relations
    //- if dev
    //-     .ui.styled.accordion
    //-         .title 
    //-             i.code.icon
    //-             i.dropdown.icon
    //-         .content
    //-             +jsonView(json=watson)
    //- +personality
    //- +consumption_preferences
